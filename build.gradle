apply plugin: 'com.android.application'

buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.4'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (ignored) {
        return null
    }
}

def getVersionCode = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', 'HEAD', '--count'
            standardOutput = stdout
        }
        return Integer.valueOf(stdout.toString().trim())
    } catch (ignored) {
        return null
    }
}

android {
    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    compileSdkVersion 31

    buildFeatures {
        viewBinding true
    }

    aaptOptions {
        cruncherEnabled = false
    }

    defaultConfig {
        applicationId "de.dennisguse.opentracks"
        versionCode 4519
        versionName "v3.22.0"

        buildConfigField "String", "VERSION_NAME_FULL", "\"${getVersionName()}\""


        minSdkVersion 21
        targetSdkVersion 31

        testInstrumentationRunner "de.dennisguse.opentracks.TestRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }
    signingConfigs {
        nightly {
            if (System.getProperty("nightly_store_file") != null) {
                storeFile file(System.getProperty("nightly_store_file"))
                storePassword System.getProperty("nightly_store_password")
                keyAlias System.getProperty("nightly_key_alias")
                keyPassword System.getProperty("nightly_key_password")
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }

        nightly {
            signingConfig signingConfigs.nightly
            applicationIdSuffix ".nightly"
        }

        release {
            minifyEnabled false
        }

        releasePlayStore {
            applicationIdSuffix ".playstore"
            versionNameSuffix "-PlayStore"
        }
    }

    applicationVariants.all { variant ->
        variant.resValue "string", "applicationId", variant.applicationId

        if (variant.buildType.name == 'nightly') {
            variant.outputs.all {
                setVersionCodeOverride(getVersionCode())
                setVersionNameOverride(getVersionName())
                outputFileName = "${applicationId}_${variant.versionCode}.apk"
            }
        }
    }
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'

    androidTestImplementation 'androidx.test:core:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'org.mockito:mockito-android:4.1.0'

    androidTestUtil 'androidx.test:orchestrator:1.4.1'
}
